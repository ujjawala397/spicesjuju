{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCWw7KoJRbcsAY-p3UMaaONpfg7xG7s_jc\",\n  authDomain: \"spices-db.firebaseapp.com\",\n  databaseURL: \"https://spices-db.firebaseio.com\",\n  projectId: \"spices-db\",\n  storageBucket: \"spices-db.appspot.com\",\n  messagingSenderId: \"447663387355\",\n  appId: \"1:447663387355:web:0e950846b62080c21492fe\",\n  measurementId: \"G-206M5JMH6C\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef; // console.log(snapShot);\n  // console.log(firestore.doc('users/fuh'));\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promp: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["F:/JujuSpices/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","promp","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,2BAFH;AAGTC,EAAAA,WAAW,EAAE,kCAHJ;AAITC,EAAAA,SAAS,EAAE,WAJF;AAKTC,EAAAA,aAAa,EAAE,uBALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAUE,OAAO,MAAMC,yBAAyB,GAAC,OAAMC,QAAN,EAAeC,cAAf,KAAgC;AACrE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,GAApC,CAAd;AAEA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;;AACA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAK;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBV,QAAzB;AACA,UAAMW,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AACA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAMa,KAAN,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAK,CAACG,OAAxC;AACD;AACF;;AACD,SAAOf,OAAP,CArBqE,CAsBrE;AACA;AACD,CAxBM;AA0BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAC9B,QAAQ,CAAC8B,IAAT,EAAX;AACP,OAAO,MAAMhB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMiB,QAAQ,GAAC,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA3B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyCWw7KoJRbcsAY-p3UMaaONpfg7xG7s_jc\",\r\n    authDomain: \"spices-db.firebaseapp.com\",\r\n    databaseURL: \"https://spices-db.firebaseio.com\",\r\n    projectId: \"spices-db\",\r\n    storageBucket: \"spices-db.appspot.com\",\r\n    messagingSenderId: \"447663387355\",\r\n    appId: \"1:447663387355:web:0e950846b62080c21492fe\",\r\n    measurementId: \"G-206M5JMH6C\"\r\n  };\r\n  export const createUserProfileDocument=async(userAuth,additionalData)=>{\r\n    if(!userAuth) return;\r\n  \r\n    const userRef=firestore.doc(`users/${userAuth.uid}}`);\r\n    \r\n    const snapShot=await userRef.get();\r\n    if(!snapShot.exists){\r\n      const{displayName,email}=userAuth;\r\n      const createdAt =new Date();\r\n      try{\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      }\r\n      catch(error){\r\n        console.log('error creating user',error.message);\r\n      }\r\n    }\r\n    return userRef;\r\n    // console.log(snapShot);\r\n    // console.log(firestore.doc('users/fuh'));\r\n  };\r\n  \r\n  firebase.initializeApp(config);\r\n  \r\n  export const auth=firebase.auth();\r\n  export const firestore=firebase.firestore();\r\n  \r\n  const provider=new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({promp:'select_account'});\r\n  export const signInWithGoogle=()=>auth.signInWithPopup(provider);\r\n  \r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}