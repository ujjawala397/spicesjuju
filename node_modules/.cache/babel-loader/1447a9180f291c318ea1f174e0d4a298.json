{"ast":null,"code":"var _jsxFileName = \"F:\\\\JujuSpices\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage';\nimport ShopPage from './pages/shop/shop';\nimport Header from './components/Header/Header';\nimport SignInUp from './pages/SignInUp/SignInUp';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  //For sign out\n  // it is needed only if sign in state changes so component did mount\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          this.props.setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          }); // console.log(this.state);\n        });\n      } else {\n        setCurrentUser({\n          userAuth\n        });\n      } // this.setState({currentUser:user});\n      // console.log(user);\n\n    });\n  } // Changes the state after signing out\n\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(SignInUp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["F:/JujuSpices/src/App.js"],"names":["React","Switch","Route","Redirect","connect","HomePage","ShopPage","Header","SignInUp","auth","createUserProfileDocument","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Switch,Route,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage';\nimport ShopPage from './pages/shop/shop';\nimport Header from './components/Header/Header';\nimport SignInUp from './pages/SignInUp/SignInUp';\nimport {auth,createUserProfileDocument} from './firebase/firebase.utils';\nimport {setCurrentUser} from './redux/user/user.actions';\nclass App extends React.Component{\n  // constructor(){\n  //   super();\n  //   this.state={\n  //     currentUser:null\n  //   }\n  // }\n\n  unsubscribeFromAuth=null;//For sign out\n  \n  // it is needed only if sign in state changes so component did mount\n  componentDidMount(){\n    const {setCurrentUser}=this.props;\n    this.unsubscribeFromAuth=auth.onAuthStateChanged(async userAuth=>{\n      if(userAuth)\n      {\n        const userRef=await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot=>{\n          this.props.setCurrentUser({\n              id:snapShot.id,\n              ...snapShot.data()\n          }); \n          // console.log(this.state);\n        });\n      }\n      else{\n        setCurrentUser({userAuth});\n      }\n      \n      // this.setState({currentUser:user});\n      // console.log(user);\n    });\n  }\n  // Changes the state after signing out\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }\n  render(){\n    return (\n    <div>\n      <Header/>\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route path='/shop' component={ShopPage} />\n        <Route \n          exact \n          path='/signin' \n          render={()=>\n            this.props.currentUser?(\n            <Redirect to='/'/>\n            ):(\n            <SignInUp/>)} />\n      </Switch>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps=({user})=>({\n  currentUser:user.currentUser\n})\n\nconst mapDispatchToProps=dispatch=>({\n  setCurrentUser:user=>dispatch(setCurrentUser(user))\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}